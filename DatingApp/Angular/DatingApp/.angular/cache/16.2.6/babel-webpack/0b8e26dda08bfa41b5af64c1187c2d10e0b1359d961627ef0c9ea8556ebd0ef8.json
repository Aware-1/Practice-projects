{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/account.service\";\nimport * as i2 from \"ngx-toastr\";\nexport class AuthGuard {\n  constructor(accountService, toastr) {\n    this.accountService = accountService;\n    this.toastr = toastr;\n  }\n  canActivate() {\n    return this.accountService.currentUser.pipe(map(user => {\n      if (user) return true;else this.toastr.error('you should login');\n      return false;\n    }));\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.ToastrService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","AuthGuard","constructor","accountService","toastr","canActivate","currentUser","pipe","user","error","_","i0","ɵɵinject","i1","AccountService","i2","ToastrService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\_guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, map } from 'rxjs';\nimport { AccountService } from '../services/account.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard  {\n\n  constructor(private accountService:AccountService,private toastr:ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser.pipe(\n      map(user=>{\n        if(user) return true;\n        else this.toastr.error('you should login');\n        \n        return false;\n      })\n      )\n  }\n\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAOtC,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,cAA6B,EAASC,MAAoB;IAA1D,KAAAD,cAAc,GAAdA,cAAc;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAkB;EAElFC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,cAAc,CAACG,WAAW,CAACC,IAAI,CACzCP,GAAG,CAACQ,IAAI,IAAE;MACR,IAAGA,IAAI,EAAE,OAAO,IAAI,CAAC,KAChB,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC,kBAAkB,CAAC;MAE1C,OAAO,KAAK;IACd,CAAC,CAAC,CACD;EACL;EAAC,QAAAC,CAAA,G;qBAbUT,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAThB,SAAS;IAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}