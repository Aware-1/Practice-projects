{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MemberService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7220/api/';\n  }\n  getMembers() {\n    return this.http.get(this.baseUrl + 'user');\n  }\n  getMember(userName) {\n    return this.http.get(this.baseUrl + 'user/' + userName);\n  }\n  updateMember(member) {\n    return this.http.put(this.baseUrl + 'user', member);\n  }\n  addLike(username) {\n    return this.http.post(this.baseUrl + \"like/\" + username, {});\n  }\n  getlikes(predicate) {\n    return this.http.get(this.baseUrl + \"like?predicate=\" + predicate);\n  }\n  static #_ = this.ɵfac = function MemberService_Factory(t) {\n    return new (t || MemberService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MemberService,\n    factory: MemberService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MemberService","constructor","http","baseUrl","getMembers","get","getMember","userName","updateMember","member","put","addLike","username","post","getlikes","predicate","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\services\\member.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MemberDTO } from '../DTOs/member/MemberDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  baseUrl: string = 'https://localhost:7220/api/';\n\n  constructor(private http: HttpClient) { }\n\n  getMembers() {\n    return this.http.get<MemberDTO[]>(this.baseUrl + 'user');\n  }\n\n  getMember(userName: string) {\n    return this.http.get<MemberDTO>(this.baseUrl + 'user/' + userName);\n  }\n\n  updateMember(member: MemberDTO) {\n    return this.http.put(this.baseUrl + 'user', member);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + \"like/\" + username, {});\n  }\n\n  getlikes(predicate: string) {\n    return this.http.get<Partial<MemberDTO[]>>(this.baseUrl + \"like?predicate=\" + predicate);\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAW,6BAA6B;EAEP;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,OAAO,GAAG,MAAM,CAAC;EAC1D;EAEAG,SAASA,CAACC,QAAgB;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,OAAO,GAAG,OAAO,GAAGI,QAAQ,CAAC;EACpE;EAEAC,YAAYA,CAACC,MAAiB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,OAAO,GAAG,MAAM,EAAEM,MAAM,CAAC;EACrD;EAEAE,OAAOA,CAACC,QAAgB;IACtB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,OAAO,GAAG,OAAO,GAAGS,QAAQ,EAAE,EAAE,CAAC;EAC9D;EAEAE,QAAQA,CAACC,SAAiB;IACxB,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAuB,IAAI,CAACF,OAAO,GAAG,iBAAiB,GAAGY,SAAS,CAAC;EAC1F;EAAC,QAAAC,CAAA,G;qBAxBUhB,aAAa,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbrB,aAAa;IAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}