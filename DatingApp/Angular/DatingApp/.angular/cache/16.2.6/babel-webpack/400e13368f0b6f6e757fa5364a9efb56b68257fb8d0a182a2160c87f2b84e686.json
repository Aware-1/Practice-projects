{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport RegisterDTO from '../DTOs/account/RegisterDTO';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/account.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nexport class RegisterComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.cancelRegister = new EventEmitter();\n    this.model = new RegisterDTO();\n    this.confirmPasswordValidator = control => {\n      return control?.value.password === control.value.confirmPassword ? null : {\n        PasswordNoMatch: true\n      };\n    };\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  register() {\n    console.log(this.model);\n    this.accountService.register(this.model).subscribe(respose => {\n      console.log(respose);\n      this.cancel();\n    }, error => {\n      console.log(error);\n    });\n  }\n  initForm() {\n    this.registerForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)]),\n      confirmPassword: new FormControl('', [Validators.required])\n    }, {\n      validators: this.confirmPasswordValidator\n    });\n  }\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    outputs: {\n      cancelRegister: \"cancelRegister\"\n    },\n    decls: 27,\n    vars: 11,\n    consts: [[1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"text-primary\"], [1, \"form-group\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"\\u062A\\u06A9\\u0631\\u0627\\u0631 \\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631\", 1, \"form-control\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"ml-10px\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtext(9, \"\\u0644\\u0637\\u0641\\u0627 \\u0627\\u06CC\\u0645\\u06CC\\u0644 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵtext(13, \"\\u0644\\u0637\\u0641\\u0627 \\u0627\\u06CC\\u0645\\u06CC\\u0644 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n        i0.ɵɵtext(18, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_19_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(20, \"\\u0644\\u063A\\u0648\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"json\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.registerForm.get(\"email\").errors && ctx.registerForm.get(\"email\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.registerForm.get(\"password\").errors && ctx.registerForm.get(\"password\").touched);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate1(\"form values : \", i0.ɵɵpipeBind1(23, 7, ctx.registerForm.value), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"form status : \", i0.ɵɵpipeBind1(26, 9, ctx.registerForm.status), \"\");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.JsonPipe],\n    styles: [\".ml-10px[_ngcontent-%COMP%]{\\n  margin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5tbC0xMHB4e1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","RegisterDTO","FormControl","FormGroup","Validators","RegisterComponent","constructor","accountService","cancelRegister","model","confirmPasswordValidator","control","value","password","confirmPassword","PasswordNoMatch","ngOnInit","initForm","register","console","log","subscribe","respose","cancel","error","registerForm","email","required","minLength","maxLength","validators","emit","_","i0","ɵɵdirectiveInject","i1","AccountService","_2","selectors","outputs","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","RegisterComponent_Template_button_click_19_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","get","errors","touched","ɵɵtextInterpolate1","ɵɵpipeBind1","status"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\register\\register.component.ts","D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport RegisterDTO from '../DTOs/account/RegisterDTO';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() cancelRegister = new EventEmitter();\n  model: RegisterDTO = new RegisterDTO();\n\n  registerForm: FormGroup;\n\n  constructor(private accountService: AccountService) {\n\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  register() {\n    console.log(this.model);\n    this.accountService.register(this.model).subscribe(respose => {\n      console.log(respose);\n      this.cancel();\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  initForm() {\n    this.registerForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)]),\n      confirmPassword: new FormControl('', [Validators.required])\n    }, { validators: this.confirmPasswordValidator });\n  }\n\n  confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return control?.value.password === control.value.confirmPassword ?\n      null : { PasswordNoMatch: true };\n  }\n\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form (ngSubmit)=\"register()\" [formGroup]=\"registerForm\">\n      <h2 class=\"text-center text-primary\">ثبت نام</h2>\n      <hr>\n      <div class=\"form-group mb-2\">\n        <input [class.is-invalid]='registerForm.get(\"email\").errors && registerForm.get(\"email\").touched' type=\"text\"\n          class=\"form-control\" formControlName=\"email\" placeholder=\"ایمیل\">\n        <div class=\"invalid-feedback\">لطفا ایمیل را وارد کنید.</div>\n      </div>\n\n      <div class=\"form-group mb-2\">\n        <input [class.is-invalid]='registerForm.get(\"password\").errors && registerForm.get(\"password\").touched' type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"کلمه عبور\">\n        <div class=\"invalid-feedback\">لطفا ایمیل را وارد کنید.</div>\n      </div>\n      <div class=\"form-group mb-2\">\n        <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\" placeholder=\"تکرار کلمه عبور\">\n      </div>\n\n      <div class=\"form-group text-center\">\n        <button class=\"btn btn-success\" type=\"submit\">ثبت نام</button>\n        <button class=\"btn btn-default ml-10px\" (click)=\"cancel()\" type=\"button\">لغو</button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<p>form values : {{registerForm.value|json}}</p>\n<p>form status : {{registerForm.status|json}}</p>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}