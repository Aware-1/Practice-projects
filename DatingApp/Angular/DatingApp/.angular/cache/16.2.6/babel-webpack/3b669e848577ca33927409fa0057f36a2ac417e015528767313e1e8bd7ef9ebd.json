{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/account.service\";\nexport class JwtInterceptor {\n  constructor(accountService) {\n    this.accountService = accountService;\n  }\n  intercept(request, next) {\n    let currentUser;\n    this.accountService.currentUser.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.AccountService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["take","JwtInterceptor","constructor","accountService","intercept","request","next","currentUser","pipe","subscribe","user","clone","setHeaders","Authorization","token","handle","_","i0","ɵɵinject","i1","AccountService","_2","factory","ɵfac"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\interceptors\\jwt.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, take } from 'rxjs';\nimport { AccountService } from '../services/account.service';\nimport { UserDTO } from '../DTOs/UserDTO';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: UserDTO;\n\n    this.accountService.currentUser.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders:{\n          Authorization:`Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n"],"mappings":"AAOA,SAAqBA,IAAI,QAAQ,MAAM;;;AAKvC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,WAAoB;IAExB,IAAI,CAACJ,cAAc,CAACI,WAAW,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAACS,SAAS,CAACC,IAAI,IAAIH,WAAW,GAAGG,IAAI,CAAC;IACnF,IAAIH,WAAW,EAAE;MACfF,OAAO,GAAGA,OAAO,CAACM,KAAK,CAAC;QACtBC,UAAU,EAAC;UACTC,aAAa,EAAC,UAAUN,WAAW,CAACO,KAAK;;OAE5C,CAAC;;IAGJ,OAAOR,IAAI,CAACS,MAAM,CAACV,OAAO,CAAC;EAC7B;EAAC,QAAAW,CAAA,G;qBAjBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}