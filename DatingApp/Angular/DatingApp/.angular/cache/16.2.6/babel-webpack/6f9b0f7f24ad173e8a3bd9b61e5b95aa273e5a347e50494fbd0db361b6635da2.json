{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport RegisterDTO from '../DTOs/account/RegisterDTO';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.cancelRegister = new EventEmitter();\n    this.model = new RegisterDTO();\n    this.confirmPasswordValidator = control => {\n      return control?.value.password === control.value.confirmPassword ? null : {\n        isMatching: true\n      };\n    };\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  register() {\n    console.log(this.model);\n    this.accountService.register(this.model).subscribe(respose => {\n      console.log(respose);\n      this.cancel();\n    }, error => {\n      console.log(error);\n    });\n  }\n  initForm() {\n    this.registerForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)])\n    }, {\n      validators: this.confirmPasswordValidator\n    });\n  }\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n};\n__decorate([Output()], RegisterComponent.prototype, \"cancelRegister\", void 0);\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","RegisterDTO","FormControl","FormGroup","Validators","RegisterComponent","constructor","accountService","cancelRegister","model","confirmPasswordValidator","control","value","password","confirmPassword","isMatching","ngOnInit","initForm","register","console","log","subscribe","respose","cancel","error","registerForm","email","required","minLength","maxLength","validators","emit","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport RegisterDTO from '../DTOs/account/RegisterDTO';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() cancelRegister = new EventEmitter();\n  model: RegisterDTO = new RegisterDTO();\n\n  registerForm: FormGroup;\n\n  constructor(private accountService: AccountService) {\n\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  register() {\n    console.log(this.model);\n    this.accountService.register(this.model).subscribe(respose => {\n      console.log(respose);\n      this.cancel();\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  initForm() {\n    this.registerForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(25)])\n    }, { validators: this.confirmPasswordValidator });\n  }\n\n  confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return control?.value.password === control.value.confirmPassword ?\n      null : { isMatching: true };\n  }\n\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAUC,MAAM,QAAQ,eAAe;AAEvE,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAA0BC,WAAW,EAAEC,SAAS,EAAiCC,UAAU,QAAQ,gBAAgB;AAO5G,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IALxB,KAAAC,cAAc,GAAG,IAAIT,YAAY,EAAE;IAC7C,KAAAU,KAAK,GAAgB,IAAIR,WAAW,EAAE;IA8BtC,KAAAS,wBAAwB,GAAiBC,OAAwB,IAA6B;MAC5F,OAAOA,OAAO,EAAEC,KAAK,CAACC,QAAQ,KAAKF,OAAO,CAACC,KAAK,CAACE,eAAe,GAC9D,IAAI,GAAG;QAAEC,UAAU,EAAE;MAAI,CAAE;IAC/B,CAAC;EA3BD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,KAAK,CAAC;IACvB,IAAI,CAACF,cAAc,CAACW,QAAQ,CAAC,IAAI,CAACT,KAAK,CAAC,CAACY,SAAS,CAACC,OAAO,IAAG;MAC3DH,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;MACpB,IAAI,CAACC,MAAM,EAAE;IACf,CAAC,EAAEC,KAAK,IAAG;MACTL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAEAP,QAAQA,CAAA;IACN,IAAI,CAACQ,YAAY,GAAG,IAAItB,SAAS,CAAC;MAChCuB,KAAK,EAAE,IAAIxB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACuB,QAAQ,CAAC;MAC/Cd,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACuB,QAAQ,EAAEvB,UAAU,CAACwB,SAAS,CAAC,CAAC,CAAC,EAAExB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACvGf,eAAe,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACuB,QAAQ,EAAEvB,UAAU,CAACwB,SAAS,CAAC,CAAC,CAAC,EAAExB,UAAU,CAACyB,SAAS,CAAC,EAAE,CAAC,CAAC;KAC9G,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACpB;IAAwB,CAAE,CAAC;EACnD;EAQAa,MAAMA,CAAA;IACJ,IAAI,CAACf,cAAc,CAACuB,IAAI,CAAC,KAAK,CAAC;EACjC;CAED;AAzCWC,UAAA,EAAThC,MAAM,EAAE,C,wDAAqC;AAFnCK,iBAAiB,GAAA2B,UAAA,EAL7BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW9B,iBAAiB,CA2C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}