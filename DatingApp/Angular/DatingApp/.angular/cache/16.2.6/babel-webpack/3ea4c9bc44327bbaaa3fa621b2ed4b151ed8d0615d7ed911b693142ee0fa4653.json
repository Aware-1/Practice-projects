{"ast":null,"code":"import { map, ReplaySubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'https://localhost:7220/api/';\n    this.currentUserSource = new ReplaySubject(1);\n    this.currentUser = this.currentUserSource.asObservable();\n  }\n  login(model) {\n    return this.httpClient.post(`${this.baseUrl}account/login`, model).pipe(map(response => {\n      var responseResult = response;\n      const user = responseResult.data;\n      console.log(response);\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSource.next(user);\n      }\n      return response;\n    }));\n  }\n  register(model) {\n    return this.httpClient.post(this.baseUrl + 'account/register', model).pipe(map(result => {\n      console.log(result);\n      if (result.isSuccess && result.data != undefined) {\n        localStorage.setItem('user', JSON.stringify(result.data));\n        this.currentUserSource.next(result.data);\n      }\n      return result;\n    }));\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n  setCurrentUser(user) {\n    if (user != null && user.token !== null && user.token !== undefined && user.token !== '') this.currentUserSource.next(user);\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ReplaySubject","AccountService","constructor","httpClient","baseUrl","currentUserSource","currentUser","asObservable","login","model","post","pipe","response","responseResult","user","data","console","log","localStorage","setItem","JSON","stringify","next","register","result","isSuccess","undefined","logout","removeItem","setCurrentUser","token","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Project\\DatingApp Project\\Angular\\DatingApp\\src\\app\\services\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { map, ReplaySubject } from \"rxjs\";\nimport { UserDTO } from \"../DTOs/UserDTO\";\nimport { ResponseResult } from '../DTOs/common/ResponseResult';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  baseUrl: string = 'https://localhost:7220/api/';\n  private currentUserSource = new ReplaySubject<UserDTO>(1)\n  currentUser = this.currentUserSource.asObservable();\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  login(model: any) {\n    return this.httpClient.post(`${this.baseUrl}account/login`, model).pipe(map((response) => {\n\n      var responseResult = <ResponseResult>response;\n    \n      const user: UserDTO = <UserDTO>responseResult.data;\n      console.log(response);\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSource.next(user);\n      }\n\n      return response;\n    }))\n  }\n\n  register(model: any) {\n    return this.httpClient.post(this.baseUrl + 'account/register', model).pipe(\n      map((result: any) => {\n\n        console.log(result);\n\n        if (result.isSuccess && result.data != undefined) {\n          localStorage.setItem('user', JSON.stringify(result.data));\n          this.currentUserSource.next(result.data);\n        }\n\n        return result;\n      })\n    )\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n\n  setCurrentUser(user: UserDTO) {\n    if (user != null && user.token !== null && user.token !== undefined && user.token !== '')\n      this.currentUserSource.next(user);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,GAAG,EAAEC,aAAa,QAAQ,MAAM;;;AAOzC,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJ9B,KAAAC,OAAO,GAAW,6BAA6B;IACvC,KAAAC,iBAAiB,GAAG,IAAIL,aAAa,CAAU,CAAC,CAAC;IACzD,KAAAM,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAGnD;EAEAC,KAAKA,CAACC,KAAU;IACd,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,eAAe,EAAEK,KAAK,CAAC,CAACE,IAAI,CAACZ,GAAG,CAAEa,QAAQ,IAAI;MAEvF,IAAIC,cAAc,GAAmBD,QAAQ;MAE7C,MAAME,IAAI,GAAqBD,cAAc,CAACE,IAAI;MAClDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrB,IAAIE,IAAI,EAAE;QACRI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;QAClD,IAAI,CAACT,iBAAiB,CAACiB,IAAI,CAACR,IAAI,CAAC;;MAGnC,OAAOF,QAAQ;IACjB,CAAC,CAAC,CAAC;EACL;EAEAW,QAAQA,CAACd,KAAU;IACjB,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,IAAI,CAACN,OAAO,GAAG,kBAAkB,EAAEK,KAAK,CAAC,CAACE,IAAI,CACxEZ,GAAG,CAAEyB,MAAW,IAAI;MAElBR,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;MAEnB,IAAIA,MAAM,CAACC,SAAS,IAAID,MAAM,CAACT,IAAI,IAAIW,SAAS,EAAE;QAChDR,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACG,MAAM,CAACT,IAAI,CAAC,CAAC;QACzD,IAAI,CAACV,iBAAiB,CAACiB,IAAI,CAACE,MAAM,CAACT,IAAI,CAAC;;MAG1C,OAAOS,MAAM;IACf,CAAC,CAAC,CACH;EACH;EAEAG,MAAMA,CAAA;IACJT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACvB,iBAAiB,CAACiB,IAAI,CAAC,IAAI,CAAC;EACnC;EAEAO,cAAcA,CAACf,IAAa;IAC1B,IAAIA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACgB,KAAK,KAAK,IAAI,IAAIhB,IAAI,CAACgB,KAAK,KAAKJ,SAAS,IAAIZ,IAAI,CAACgB,KAAK,KAAK,EAAE,EACtF,IAAI,CAACzB,iBAAiB,CAACiB,IAAI,CAACR,IAAI,CAAC;EACrC;EAAC,QAAAiB,CAAA,G;qBAjDU9B,cAAc,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnC,cAAc;IAAAoC,OAAA,EAAdpC,cAAc,CAAAqC,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}